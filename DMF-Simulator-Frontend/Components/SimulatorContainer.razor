<div class="simulator-container" width="@_simulatorManager.BoardModel.Information.FirstOrDefault().SizeX" height="@_simulatorManager.BoardModel.Information.FirstOrDefault().SizeY" @onclick="@_simulatorManager.StartSimulator">
    @if (_simulatorManager.BoardModel.Electrodes != null)
    {
        @foreach (var electrode in _simulatorManager.BoardModel.Electrodes)
        {
            <Electrode Model="electrode" />
        }
    }

    @if (_simulatorManager.BoardModel.Actuators != null)
    {
        @foreach (var actuator in _simulatorManager.BoardModel.Actuators)
        {
            <Actuator Model="actuator" />
        }
    }

    @if (_simulatorManager.BoardModel.Sensors != null)
    {
        @foreach (var sensor in _simulatorManager.BoardModel.Sensors)
        {
            <Sensor Model="sensor" />
        }
    }

    @if (_simulatorManager.BoardModel.Droplets != null)
    {
        @foreach (var droplet in _simulatorManager.BoardModel.Droplets)
        {
            <Droplet Model="droplet" />
        }
    }

    @if (_simulatorManager.BoardModel.Bubbles != null)
    {
        @foreach (var bubble in _simulatorManager.BoardModel.Bubbles)
        {
            <Bubble Model="bubble" />
        }
    }
</div>

@code {
    public SimulatorManager _simulatorManager;
    [Parameter]
    public BoardModel BoardModel { get; set; }
    [Parameter]
    public BoardModel BoardModelNew { get; set; }

    protected override void OnInitialized()
    {
        _simulatorManager = new(BoardModel, BoardModelNew);
        _simulatorManager.MainLoopCompleted += (o, e) => StateHasChanged();
    }
}