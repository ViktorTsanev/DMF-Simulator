@page "/simulator"
@implements ISimulatorDataLoader
@inject HttpClient Http
@inject IMatToaster Toaster
@inject IConfiguration Configuration

@if (_initialBoard == null)
{
    <MatFileUpload OnChange="MultipleFilesReady" AllowMultiple="true" Label="Drop files here or Browse"></MatFileUpload>
}
else
{
    <CascadingValue Value="this" IsFixed="true">
        <SimulatorContainer BoardModel="_initialBoard" BoardModelNew="_boardStates" AnimationTimePoints="_animationTimePoints" />
    </CascadingValue>
}

@code {
    private BoardModel _initialBoard;
    private List<BoardModel> _boardStates;
    private List<int> _animationTimePoints;

    // Use this method to load default data.
    /*protected override async Task OnInitializedAsync()
    {
        //_initialBoard = await Http.GetFromJsonAsync<BoardModel>("sample-data/board4x3.json");
        //_initialBoard = await Http.GetFromJsonAsync<BoardModel>("sample-data/board10x10.json");
        //_initialBoard = await Http.GetFromJsonAsync<BoardModel>("sample-data/boardWithEverything.json");
        //_initialBoard = await Http.GetFromJsonAsync<BoardModel>("sample-data/100x100.json");
        //_initialBoard = await Http.GetFromJsonAsync<BoardModel>("sample-data/32x20.json");
        //_initialBoard = await Http.GetFromJsonAsync<BoardModel>("sample-data/32x20_mini.json");
        //_initialBoard = await Http.GetFromJsonAsync<BoardModel>("sample-data/0.json");
        //_initialBoard = await Http.GetFromJsonAsync<BoardModel>("sample-data/board10x10F.json");
        _initialBoard = await Http.GetFromJsonAsync<BoardModel>("sample-data/board32x20(2).json");
        _boardStates = new();
        //_boardStates.Add(await Http.GetFromJsonAsync<BoardModel>("sample-data/changes1.json"));
        //_boardStates.Add(await Http.GetFromJsonAsync<BoardModel>("sample-data/changes2.json"));
        //_boardStates.Add(await Http.GetFromJsonAsync<BoardModel>("sample-data/changes3.json"));
    }*/

    public async Task MultipleFilesReady(IMatFileUploadEntry[] files)
    {
        try
        {
            ISimulatorDataLoader dataLoader = new Simulator();
            var simulatorData = await dataLoader.LoadSimulatorDataAsync(files, Configuration["initialBoardFileName"]);

            _initialBoard = simulatorData.Item1;
            _boardStates = simulatorData.Item2;
            _animationTimePoints = simulatorData.Item3;

            if (files.Length > 0)
            {
                Toaster.Add("Successfully Uploaded Files", MatToastType.Success, "Success", "");
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
            ResetSimulator();
            Toaster.Add("Error Upoading Files", MatToastType.Danger, "Error", "");
        }
    }

    public void ResetSimulator()
    {
        _initialBoard = null;
        _boardStates = null;
    }
}
